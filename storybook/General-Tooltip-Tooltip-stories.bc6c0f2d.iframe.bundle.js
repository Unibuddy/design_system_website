"use strict";(self.webpackChunk_unibuddy_patron=self.webpackChunk_unibuddy_patron||[]).push([[5658],{"./src/General/Tooltip/Tooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Tooltip_stories});__webpack_require__("../../node_modules/react/index.js");var _templateObject,Button=__webpack_require__("./src/General/Button/Button.jsx"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),reach_tooltip_esm=__webpack_require__("../../node_modules/@reach/tooltip/dist/reach-tooltip.esm.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=(__webpack_require__("../../node_modules/@reach/tooltip/styles.css"),__webpack_require__("../../node_modules/react/jsx-runtime.js")),_excluded=["label","children"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _taggedTemplateLiteralLoose(strings,raw){return raw||(raw=strings.slice(0)),strings.raw=raw,strings}var ReachToolTip=(0,styled_components_browser_esm.ZP)(reach_tooltip_esm.ZP)(_templateObject||(_templateObject=_taggedTemplateLiteralLoose(["\n    &[data-reach-tooltip] {\n        background-color: ",";\n        color: white;\n        border: 0;\n        font-size: 14px;\n        padding: 0.25rem 0.75rem;\n        border-radius: 4px;\n        white-space: normal;\n        max-width: 260px;\n    }\n"])),(_ref=>{var{theme}=_ref;return theme.colors.grey800}));function Tooltip(_ref2){var{label,children}=_ref2,props=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(_ref2,_excluded);return(0,jsx_runtime.jsx)(ReachToolTip,_extends({},props,{label,children}))}Tooltip.displayName="Tooltip",Tooltip.propTypes={children:prop_types_default().node.isRequired,label:prop_types_default().string.isRequired};try{Tooltip.displayName="Tooltip",Tooltip.__docgenInfo={description:"",displayName:"Tooltip",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/General/Tooltip/Tooltip.tsx#Tooltip"]={docgenInfo:Tooltip.__docgenInfo,name:"Tooltip",path:"src/General/Tooltip/Tooltip.tsx#Tooltip"})}catch(__react_docgen_typescript_loader_error){}const Tooltip_stories={title:"General/Tooltip"};var Default={render:args=>(0,jsx_runtime.jsx)(Tooltip,{label:"This is a tooltip",DEBUG_STYLE:!0,children:(0,jsx_runtime.jsx)(Button.Z,{children:"Button"})})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: args => <Tooltip label="This is a tooltip" DEBUG_STYLE={true}>\n            <Button>Button</Button>\n        </Tooltip>\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);