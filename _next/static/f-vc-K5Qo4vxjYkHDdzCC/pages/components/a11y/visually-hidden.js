(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"/0M7":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/a11y/visually-hidden",function(){var e=n("mGRA");return{page:e.default||e}}])},mGRA:function(e,t,n){"use strict";n.r(t);var o=n("z3IF"),i=n("2Fjn"),a=(n("mXGw"),n("SAVP")),r={},s="wrapper";function c(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)(s,Object(o.a)({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",null,"VisuallyHidden"),Object(a.b)("h2",null,"Overview"),Object(a.b)("p",null,"Provides text for screen readers that is visually hidden. It is the logical opposite of the aria-hidden attribute."),Object(a.b)("h2",null,"Why do we need this?"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"aria-label"),", ",Object(a.b)("inlineCode",{parentName:"p"},"aria-labeledby"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"aria-describedby")," attributes are inconsistent on static elements. Therefore, they should only be used on interactive elements like buttons, links etc. We can use this element to augment part of the ui for screen readers while keeping this element hidden form sighted users. The styling of this element makes it not part of the document flow."))}c.isMDXComponent=!0,n.d(t,"default",function(){return d});var l={},b="wrapper";function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)(b,Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(c,{mdxType:"Readme"}))}d.isMDXComponent=!0}},[["/0M7",1,0]]]);