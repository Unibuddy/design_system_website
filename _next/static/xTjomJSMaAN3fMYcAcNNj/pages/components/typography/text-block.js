(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{"+2FO":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return y}));var r=t("cxan"),a=t("HbGN"),o=t("ERkP"),l=t.n(o),i=t("ZVZ0"),c=["components"],p=(l.a.createElement,{}),s="wrapper";function u(e){var n=e.components,t=Object(a.a)(e,c);return Object(i.b)(s,Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",null,"TextBlock"),Object(i.b)("p",null,"This component uses CSS trickery from ",Object(i.b)("inlineCode",{parentName:"p"},"capsize"),' library to eliminate the invisible "padding" that the browser adds around any piece of text.'),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/capsize"},"capsize")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/react-native-capsize"},"react-native-capsize")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'import {TextBlock} from "@unibuddy/patron";\n// or\nimport {Text} from "@unibuddy/patron";\n')),Object(i.b)("h2",null,"Readiness"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render functional",render:!0,functional:!0},'function Render() {\n    const readiness = [\n        {\n            key: "Native",\n            ready: true,\n        },\n\n        {\n            key: "Theme",\n            ready: true,\n        },\n        {\n            key: "Typescript",\n            ready: true,\n        },\n    ];\n\n    return (\n        <Inline space="medium">\n            {readiness.map(param => (\n                <Box\n                    bgColor={param.ready ? "#43A047" : "#E53935"}\n                    borderRadius="large"\n                    padding="small"\n                >\n                    <Inline space="small" verticalAlign="center">\n                        <Text color="white" weight="bold">\n                            {param.key}\n                        </Text>\n                    </Inline>\n                </Box>\n            ))}\n        </Inline>\n    );\n}\n')),Object(i.b)("h2",null,"Composition"),Object(i.b)("p",null,"As most other components, the ",Object(i.b)("inlineCode",{parentName:"p"},"TextBlock")," component doesn't have any surrounding white space. If you want to add white space you can use one of the provided Layout components."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack space="small">\n    <Heading level="4">Hello, this is a title</Heading>\n    <TextBlock>Hello, this is some accompanying text.</TextBlock>\n</Stack>\n')),Object(i.b)("h2",null,"Theming"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"TextBlock")," uses the default theme provided by our design team but you can override these values if required."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render",render:!0},'function Render() {\n    const nunitoMetrics = {\n        capHeight: 705,\n        ascent: 1011,\n        descent: -353,\n        lineGap: 0,\n        unitsPerEm: 1000,\n    };\n\n    const customTextTheme = {\n        TextBlock: {\n            fontMetrics: nunitoMetrics,\n            fontFamily: "Nunito",\n            color: "#222",\n            sizes: {\n                large: {\n                    fontSize: 40,\n                    leading: 60,\n                },\n            },\n        },\n    };\n\n    return (\n        <DesignSystemProvider theme={customTextTheme}>\n            <Stack space="medium">\n                <Text size="small">I am "small" using default values</Text>\n                <Text size="medium">I am "medium" using default values</Text>\n                <Text size="large">I am "large" using custom values</Text>\n            </Stack>\n        </DesignSystemProvider>\n    );\n}\n')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"fontMetrics"),' are calculated properties unique to each font. You need to provide these values if you decide to use a font other than "Nunito". You can get these values for Google fonts from ',Object(i.b)("a",{parentName:"p",href:"https://seek-oss.github.io/capsize/"},"capsize website")," or even upload your own."),Object(i.b)("h2",null,"Testing"),Object(i.b)("p",null,"Generally, you should be using ",Object(i.b)("inlineCode",{parentName:"p"},"getByText")," and ",Object(i.b)("inlineCode",{parentName:"p"},"findByText")," from ",Object(i.b)("inlineCode",{parentName:"p"},"@testing-library/react"),". Avoid trying to add ",Object(i.b)("inlineCode",{parentName:"p"},"data-test-id"),", ",Object(i.b)("inlineCode",{parentName:"p"},"TextBlock")," doesn't pass it through. In the case of last resort, you can pass it an ",Object(i.b)("inlineCode",{parentName:"p"},"id")," prop."),Object(i.b)("h2",null,"All Properties"),Object(i.b)("h4",null,"Type Glossary"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"/components/typography/type-glossary"},"All typography property types are defined here.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render functional",render:!0,functional:!0},'function Render() {\n    const props = [\n        {\n            key: "color",\n            type: "string",\n            description: "Color of the text",\n            default: "<string>-themed",\n        },\n        {\n            key: "weight",\n            type: "FontWeightAbsolute | FontWeights",\n            description: "Weight applied to the font",\n            default: "initial",\n        },\n        {\n            key: "align",\n            type: "TextAlignProperty",\n            description: "Text align property",\n            default: "initial",\n        },\n        {\n            key: "breakWords",\n            type: "boolean",\n            description:\n                "Breaks long words and urls into multiline text with a hyphen at breaking point",\n            default: "false",\n        },\n        {\n            key: "nowrap",\n            type: "boolean",\n            description: "Forces the text to stay on one line",\n            default: "false",\n        },\n        {\n            key: "whiteSpace",\n            type: "WhiteSpaceProperty",\n            description: "Defines how white space is handled",\n            default: "normal",\n        },\n        {\n            key: "transform",\n            type: "TextTransformProperty",\n            description: "CSS text transform property",\n            default: "normal",\n        },\n\n        {\n            key: "letterSpacing",\n            type: "Globals | string",\n            description: "Spacing between individual characters",\n            default: "normal",\n        },\n\n        {\n            key: "fontStyle",\n            type: "FontStyleProperty",\n            description: "Changes font style used",\n            default: "normal",\n        },\n        {\n            key: "truncate",\n            type: "boolean | number",\n            description: "Truncate text with an ellipsis at the end of a single line",\n            default: "false",\n        },\n        {\n            key: "lineHeight",\n            type: "string",\n            description: "Override default line-height",\n            default: "initial",\n        },\n    ];\n\n    const codeBlockStyle = {\n        fontSize: "14px",\n    };\n\n    return (\n        <Table bordered={true}>\n            <TableHead>\n                <TableRow>\n                    <TableHeader>Key</TableHeader>\n                    <TableHeader>Type</TableHeader>\n                    <TableHeader>Description</TableHeader>\n                    <TableHeader>Default</TableHeader>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.map(prop => {\n                    return (\n                        <TableRow>\n                            <TableCell>\n                                <code style={codeBlockStyle}>{prop.key}</code>\n                            </TableCell>\n                            <TableCell>\n                                <code style={codeBlockStyle}>{prop.type}</code>\n                            </TableCell>\n                            <TableCell>\n                                <Text size="small">{prop.description}</Text>\n                            </TableCell>\n                            <TableCell>\n                                {prop.default.includes("<string>") ? (\n                                    <Text size="small">\n                                        {prop.default.replace("<string>-", "")}\n                                    </Text>\n                                ) : (\n                                    <code style={codeBlockStyle}>{prop.default}</code>\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n}\n')))}u.isMDXComponent=!0;var d=["components"],b=(l.a.createElement,{}),m="wrapper";function y(e){var n=e.components,t=Object(a.a)(e,d);return Object(i.b)(m,Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)(u,{mdxType:"Readme"}))}y.isMDXComponent=!0},"+wNj":function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}t.d(n,"a",(function(){return r}))},HbGN:function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var r=t("+wNj");function a(e,n){if(null==e)return{};var t,a,o=Object(r.a)(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}},Km8e:function(e,n,t){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},ZVZ0:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return y}));var r=t("ERkP"),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),s=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"===typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,m=u["".concat(l,".").concat(d)]||u[d]||b[d]||o;return t?a.a.createElement(m,i(i({ref:n},p),{},{components:t})):a.a.createElement(m,i({ref:n},p))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"===typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[d]="string"===typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},cxan:function(e,n,t){"use strict";function r(){return(r=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,"a",(function(){return r}))},wChU:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/typography/text-block",function(){return t("+2FO")}])}},[["wChU",0,1]]]);