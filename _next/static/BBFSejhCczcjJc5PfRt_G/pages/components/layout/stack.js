(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{"+wNj":function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}t.d(n,"a",(function(){return r}))},"9dNa":function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/layout/stack",function(){return t("zL+H")}])},HbGN:function(e,n,t){"use strict";t.d(n,"a",(function(){return a}));var r=t("+wNj");function a(e,n){if(null==e)return{};var t,a,l=Object(r.a)(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}},Km8e:function(e,n,t){"use strict";var r=Object.assign.bind(Object);e.exports=r,e.exports.default=e.exports},ZVZ0:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return f}));var r=t("ERkP"),a=t.n(r);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),s=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"===typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=s(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),u=r,m=d["".concat(o,".").concat(u)]||d[u]||b[u]||l;return t?a.a.createElement(m,c(c({ref:n},p),{},{components:t})):a.a.createElement(m,c({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"===typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[u]="string"===typeof e?e:r,o[1]=c;for(var p=2;p<l;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},cxan:function(e,n,t){"use strict";function r(){return(r=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,"a",(function(){return r}))},"zL+H":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return f}));var r=t("cxan"),a=t("HbGN"),l=t("ERkP"),o=t.n(l),c=t("ZVZ0"),i=["components"],p=(o.a.createElement,{}),s="wrapper";function d(e){var n=e.components,t=Object(a.a)(e,i);return Object(c.b)(s,Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",null,"Stack"),Object(c.b)("p",null,"This component is used to stack components vertically and add white space between them."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'import {Stack} from "@unibuddy/patron";\n')),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack space="small">\n    <Box padding="small" backgroundColor="grey150">\n        Item 1\n    </Box>\n    <Box padding="small" backgroundColor="grey150">\n        Item 2\n    </Box>\n    <Box padding="small" backgroundColor="grey150">\n        Item 3\n    </Box>\n</Stack>\n')),Object(c.b)("h2",null,"Readiness"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render functional",render:!0,functional:!0},'function Render() {\n    const readiness = [\n        {\n            key: "Native",\n            ready: true,\n        },\n\n        {\n            key: "Theme",\n            ready: true,\n        },\n        {\n            key: "Typescript",\n            ready: true,\n        },\n    ];\n\n    return (\n        <Inline space="medium">\n            {readiness.map(param => (\n                <Box\n                    bgColor={param.ready ? "#43A047" : "#E53935"}\n                    borderRadius="large"\n                    padding="small"\n                >\n                    <Inline space="small" verticalAlign="center">\n                        <Text color="white" weight="bold">\n                            {param.key}\n                        </Text>\n                    </Inline>\n                </Box>\n            ))}\n        </Inline>\n    );\n}\n')),Object(c.b)("h2",null,"Responsive props"),Object(c.b)("p",null,"Spacing props accept lists as values: ",Object(c.b)("inlineCode",{parentName:"p"},'<Stack space={["small", "medium", "xlarge"]} />'),". ",Object(c.b)("inlineCode",{parentName:"p"},"Stack")," will have a spacing of ",Object(c.b)("inlineCode",{parentName:"p"},"8px")," on a mobile device, ",Object(c.b)("inlineCode",{parentName:"p"},"20px")," on a tablet, and ",Object(c.b)("inlineCode",{parentName:"p"},"32px")," on desktop. The ",Object(c.b)("inlineCode",{parentName:"p"},"px")," come from ",Object(c.b)("inlineCode",{parentName:"p"},"ThemeProvider")," and may differ in your app. The breakpoints are standardized and not customizable."),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"/guides/layout#Need%20responsive%20styles?"},"Read more here")),Object(c.b)("h2",null,"Composition"),Object(c.b)("p",null,"Stacks can be composed together to achieve different spacing between different groups of elements."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack space="large">\n    <Heading level="3">Heading</Heading>\n    <Stack space="medium">\n        <TextBlock>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse dignissim dapibus\n            elit, vel egestas felis pharetra non.\n        </TextBlock>\n        <TextBlock>\n            Phasellus ipsum tortor, aliquet dapibus fermentum in, mollis vel metus. Vestibulum\n            malesuada ante eu velit malesuada, nec ultricies sapien finibus.\n        </TextBlock>\n    </Stack>\n</Stack>\n')),Object(c.b)("h2",null,"Space"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"space")," prop is used to define white space between each child, and it utilizes the ",Object(c.b)("a",{parentName:"p",href:"/guides/layout#Need%20responsive%20styles?"},"responsive prop")," concept."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack space="large">\n    <Box padding="small" backgroundColor="grey150">\n        Item\n    </Box>\n    <Box padding="small" backgroundColor="grey150">\n        Item\n    </Box>\n</Stack>\n')),Object(c.b)("h2",null,"Align"),Object(c.b)("p",null,"Stack children can be aligned horizontally left, right, and center with the ",Object(c.b)("inlineCode",{parentName:"p"},"align")," prop."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack space="medium" align="right">\n    <TextBlock>Lorem ipsum dolor sit amet.</TextBlock>\n    <TextBlock>Phasellus ipsum tortor.</TextBlock>\n</Stack>\n')),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack space="medium" align="center">\n    <TextBlock>Lorem ipsum dolor sit amet.</TextBlock>\n    <TextBlock>Phasellus ipsum tortor.</TextBlock>\n</Stack>\n')),Object(c.b)("h2",null,"Dividers"),Object(c.b)("p",null,"You can optionally add dividers between Stack items with the ",Object(c.b)("inlineCode",{parentName:"p"},"dividers")," prop."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render=true",render:"true"},'<Stack dividers>\n    <Box padding="small">Item</Box>\n    <Box padding="small">Item</Box>\n    <Box padding="small">Item</Box>\n</Stack>\n')),Object(c.b)("h2",null,"All Properties"),Object(c.b)("h4",null,"Type Glossary"),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"/components/layout/type-glossary"},"All layout component property types are defined here.")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx",metastring:"render functional",render:!0,functional:!0},'function Render() {\n    const props = [\n        {\n            key: "space",\n            type: "ResponsiveProp<LayoutSpaceProp>",\n            description: "White space between children",\n            default: "undefined",\n        },\n        {\n            key: "align",\n            type: "LayoutAlignProp",\n            description: "Horizontal alignment in children",\n            default: "left",\n        },\n        {\n            key: "dividers",\n            type: "boolean",\n            description: "If dividers should be added between children",\n            default: "false",\n        },\n        {\n            key: "color",\n            type: "string",\n            description: "Background color of the button",\n            default: "<string>-themed",\n        },\n    ];\n\n    const codeBlockStyle = {\n        fontSize: "14px",\n    };\n\n    return (\n        <Table bordered={true}>\n            <TableHead>\n                <TableRow>\n                    <TableHeader>Key</TableHeader>\n                    <TableHeader>Type</TableHeader>\n                    <TableHeader>Description</TableHeader>\n                    <TableHeader>Default</TableHeader>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.map(prop => {\n                    return (\n                        <TableRow>\n                            <TableCell>\n                                <code style={codeBlockStyle}>{prop.key}</code>\n                            </TableCell>\n                            <TableCell>\n                                <code style={codeBlockStyle}>{prop.type}</code>\n                            </TableCell>\n                            <TableCell>\n                                <Text size="small">{prop.description}</Text>\n                            </TableCell>\n                            <TableCell>\n                                {prop.default.includes("<string>") ? (\n                                    <Text size="small">\n                                        {prop.default.replace("<string>-", "")}\n                                    </Text>\n                                ) : (\n                                    <code style={codeBlockStyle}>{prop.default}</code>\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n}\n')))}d.isMDXComponent=!0;var u=["components"],b=(o.a.createElement,{}),m="wrapper";function f(e){var n=e.components,t=Object(a.a)(e,u);return Object(c.b)(m,Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)(d,{mdxType:"Readme"}))}f.isMDXComponent=!0}},[["9dNa",0,1]]]);