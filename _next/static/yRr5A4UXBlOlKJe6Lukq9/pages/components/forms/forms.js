(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"5IsQ":function(e,t){var n,r,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:o}catch(e){n=o}try{r="function"===typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var c,s=[],u=!1,p=-1;function m(){u&&c&&(u=!1,c.length?s=c.concat(s):p=-1,s.length&&b())}function b(){if(!u){var e=l(m);u=!0;for(var t=s.length;t;){for(c=s,s=[];++p<t;)c&&c[p].run();p=-1,t=s.length}c=null,u=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function f(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new d(e,t)),1!==s.length||u||l(b)},d.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=f,a.addListener=f,a.once=f,a.off=f,a.removeListener=f,a.removeAllListeners=f,a.emit=f,a.prependListener=f,a.prependOnceListener=f,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},Fcif:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},SAVP:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return p}));var r=n("mXGw"),a=n.n(r),o=a.a.createContext({}),i=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=i(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){return a.a.createElement(a.a.Fragment,{},e.children)}},u=function(e){var t=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,l=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),c=i(t);return a.a.createElement(c[o+"."+n]||c[n]||s[n]||r,t?Object.assign({},l,{components:t}):l)};function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},STWM:function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return r}))},Yyr4:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return z}));var r=n("Fcif"),a=n("dV/x"),o=n("mXGw"),i=n.n(o),l=n("SAVP"),c=n("vtzX"),s=n("MFeX"),u=n("GXFl"),p=n("2y1a"),m=(n("ABKx"),n("W1QL"),n("W0B4")),b=n.n(m),d=n("8Jek"),f=n.n(d),h=n("7NOV");var O={blackPearl:"#181D22",stoneGrey:"#313B45",smartGrey:"#536374",softGrey:"#A9B4C0",inkWater:"#D0D6DC",solitude:"#E4E8EB",deepSolitude:"#F7F8F9",endeavour:"#26588B",astralBlue:"#306FAE",deepSky:"#3D8BDA",dodgerBlue:"#3091F2",redCloud:"#d23e38",pikachu:"#FFC92D",freshLeaves:"#1CA56E",pureHit:"#23CF8A",bodyColour:"#292929",lightBodyColour:"#757474",errorColour:"#d2413b",primaryColour:"#2672bd"},y=n("1mh6"),g=n.n(y);function j(){return(j=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function v(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var w=e=>{var{className:t,size:n,color:r}=e,a=v(e,["className","size","color"]);return i.a.createElement("svg",j({className:f()(g.a.spinner,t),width:n,height:n,viewBox:"0 0 66 66",xmlns:"http://www.w3.org/2000/svg"},a),i.a.createElement("circle",{className:g.a.path,stroke:O.smartGrey,style:{stroke:r||"var(--smart-grey)"},fill:"none",strokeWidth:"6",strokeLinecap:"round",cx:"33",cy:"33",r:"30"}))};w.propTypes={className:b.a.string,color:b.a.string,size:b.a.number},w.defaultProps={className:"",size:65};var N=w,T=n("aQr1"),F=n.n(T);function x(){return(x=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function S(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var C={success:"white",primary:"white",danger:"white"},E=i.a.forwardRef((e,t)=>{var{children:n,loading:r,className:a}=e,o=S(e,["children","loading","className"]);return i.a.createElement(h.a,x({ref:t},o,{className:f()(a,F.a.button)}),i.a.createElement("span",{"aria-hidden":r,className:f()(F.a.innerText,{[F.a.innerTextLoading]:r}),"data-test-id":"loading-button"},n),i.a.createElement("span",{"aria-label":"".concat("string"===typeof n?n:""," loading"),className:f()(F.a.loader,{[F.a.loaderVisible]:r})},i.a.createElement(N,{color:C[o.color]})))});E.propTypes={loading:b.a.bool},E.defaultProps={loading:!1};var k=E;function P(){return(P=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var B=i.a.forwardRef((e,t)=>i.a.createElement(p.a,null,n=>{var{form:{isSubmitting:r,isValidating:a}}=n;return i.a.createElement(k,P({ref:t,loading:r,disabled:r||a,type:"submit"},e),e.children)})),I=n("STWM"),A=n("cwdW"),D=(i.a.createElement,{}),G="wrapper";function M(e){var t=e.components,n=Object(A.a)(e,["components"]);return Object(l.b)(G,Object(I.a)({},D,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",null,"Forms"),Object(l.b)("p",null,"The main concept we need to get up to speed on, regarding the form handling in react, is the controlled vs uncontrolled forms. ",Object(l.b)("strong",{parentName:"p"},"Relevant react documentation ",Object(l.b)("a",Object(I.a)({parentName:"strong"},{href:"https://reactjs.org/docs/forms.html"}),"Forms"),".")," "),Object(l.b)("h2",null,"Controlled vs. Uncontrolled"),Object(l.b)("p",null,"By default, input elements in HTML and in react are uncontrolled, meaning they maintain internal state. React documentation, however, recommends that you build controlled components in most cases, meaning you listen to ",Object(l.b)("inlineCode",{parentName:"p"},"onChange")," event, set the state from that event value, and then pass that state to the input element ",Object(l.b)("inlineCode",{parentName:"p"},"value")," prop. It turns out, this is extremely tedious and too low level when building products, and makes building large forms very slow and bug prone."),Object(l.b)("p",null,"This is the reason there are so many form libraries out there, and most of them focus on two things, maintaining internal control of the state, and validation, while offering some convinient api's as escape hatches. We decided to use ",Object(l.b)("a",Object(I.a)({parentName:"p"},{href:"https://github.com/jaredpalmer/formik"}),"Formik")," and ",Object(l.b)("a",Object(I.a)({parentName:"p"},{href:"https://github.com/jquense/yup"}),"yup")," for validation."),Object(l.b)("h2",null,"Example use"),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),'function MyForm() {\n    const onSubmit = (values, formActions) => {\n        console.log(values.someField)\n\n        formActions.setSubmitting(false)\n    }\n\n    return <Form\n        initialValues={{someField: ""}}\n        validationSchema={{someField: yup.string().required()}}\n        onSubmit={onSubmit}\n    >\n        <FormGroup label="Some field">\n            <input name="someField" required />\n        </FormGroup>\n        <button type="submit">Submit</button>\n    </Form>\n}\n')),Object(l.b)("h2",null,"Migrate from a controlled form"),Object(l.b)("p",null,"Our form components are a thin wrapper around Formik. To start wrap all your form inputs in a ",Object(l.b)("inlineCode",{parentName:"p"},"<Form>")," component."),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),"<Form>\n    <input value={this.state.value} onChange={this.handleChange} />\n    <button onClick={this.onSubmit}>Submit</button>\n</Form>\n")),Object(l.b)("p",null,"Next we need to wrap the input in a ",Object(l.b)("inlineCode",{parentName:"p"},"<FormGroup>")," component in order to wire up the input with the ",Object(l.b)("inlineCode",{parentName:"p"},"<Form>"),". Next we can remove the value and onChange props as we don't need to control Formik components, the ",Object(l.b)("inlineCode",{parentName:"p"},"<Form>")," holds all the state. Our page only declares what inputs it needs. "),Object(l.b)("p",null,"We add ",Object(l.b)("inlineCode",{parentName:"p"},'label="Test"')," prop that internally adds a label element and associates it with the input via a generated or manually provided id. ",Object(l.b)("a",Object(I.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label"}),"Why we do this"),"."),Object(l.b)("p",null,"Finally, we need a ",Object(l.b)("inlineCode",{parentName:"p"},"button")," with a ",Object(l.b)("inlineCode",{parentName:"p"},'type="submit"'),", in order to be able to submit the form by either clicking on it or via enter press."),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),'<Form>\n    <FormGroup label="Test">\n        <input name="test" />\n    </FormGroup>\n    <button type="submit">Submit</button>\n</Form>\n')),Object(l.b)("p",null,"In order for formik to differentiate inputs we need to add a name to each of them. See ",Object(l.b)("inlineCode",{parentName:"p"},'name="test"'),"\nFirst, we will replace ",Object(l.b)("inlineCode",{parentName:"p"},"input")," with ",Object(l.b)("inlineCode",{parentName:"p"},"TextInput")," for some nice default styling.\nWe can replace also the ",Object(l.b)("inlineCode",{parentName:"p"},"button")," with a ",Object(l.b)("inlineCode",{parentName:"p"},"<SubmitButton>")," that abstracts away the disabling of the button and loading state."),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),'<Form>\n    <FormGroup label="Test">\n        <TextInput name="test" />\n    </FormGroup>\n    <SubmitButton>Submit</SubmitButton>\n</Form>\n')),Object(l.b)("h3",null,"Adding validation"),Object(l.b)("p",null,"Finally to validate the form we add ",Object(l.b)("inlineCode",{parentName:"p"},"validationSchema")," and ",Object(l.b)("inlineCode",{parentName:"p"},"initialValues"),". Initial values is important because that way formik knows which fields exist in the form and therefore are valid/invalid before any onChange is fired."),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),'const initialValues = {test: ""};\nconst validationSchema = {\n    test: yup\n        .string()\n        .required()\n        .min(3),\n};\n<Form validationSchema={validationSchema} initialValues={initialValues}>\n    <FormGroup label="Test">\n        <TextInput name="test" />\n    </FormGroup>\n    <SubmitButton>Submit</SubmitButton>\n</Form>;\n')),Object(l.b)("h3",null,"onSubmit"),Object(l.b)("p",null,"In order to get the data from the form we must add a onSubmit callback to the Form component. On form submit Formik ",Object(l.b)("strong",{parentName:"p"},"asynchronously")," validates the form and if all the validation passes calls our onSubmit callback with values as the first argument and internal actions as the second arg."),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),'handleSubmit(values, formikActions) {\n try {\n   await api(...);\n   # after successuful api call\n   formikActions.setSubmitting(false);\n } catch (error) {\n   formikActions.setSubmitting(false);\n   formikActions.setValidation("serverError", error.message);\n }\n}\n<Form onSubmit={handleSubmit}>\n    {...}\n    <ErrorMessage name="serverError" />\n</Form>\n')),Object(l.b)("h2",null,"Testing forms"),Object(l.b)("p",null,"In the previos section we mentioned that the form validation is async, which means you will need to wait for changes in the form in your tests. The testing library of choice is ",Object(l.b)("inlineCode",{parentName:"p"},"react-testing-library")," because it provides easy async testing utilities like ",Object(l.b)("inlineCode",{parentName:"p"},"wait"),", ",Object(l.b)("inlineCode",{parentName:"p"},"waitForDOMChange")," or ",Object(l.b)("inlineCode",{parentName:"p"},"waitForElement"),". ",Object(l.b)("a",Object(I.a)({parentName:"p"},{href:"https://testing-library.com/docs/api-async"}),"RTL async utilities docs"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),'import {render, fireEvent} from "react-testing-library";\nimport {render, fireEvent, wait, waitForElement} from "react-testing-library";\n\ntest("should change after click", async () => {\n    const {getByTestId} = render(<MyComponent/>);\n\n    fireEvent.click(getByTestId("some-button"))\n\n    await wait(() => expect(getByTestId("some-dynamic-element")).toBeInTheDocument());\n    // or...\n    await waitForElement(() => getByTestId("some-dynamic-element"));\n});\n')),Object(l.b)("h2",null,"Adding a custom form input"),Object(l.b)("p",null,"In order to add a new input type that interfaces with ",Object(l.b)("inlineCode",{parentName:"p"},"<FormGroup")," and ",Object(l.b)("inlineCode",{parentName:"p"},"<Form>")," it needs to implement a kind of ",Object(l.b)("em",{parentName:"p"},"interface"),".\nThe input needs to be controlled, meaning it has to accept a ",Object(l.b)("strong",{parentName:"p"},"value")," and ",Object(l.b)("strong",{parentName:"p"},"name")," props and emit ",Object(l.b)("strong",{parentName:"p"},"props.onChange")," and ",Object(l.b)("strong",{parentName:"p"},"props.onBlur"),' that emit a "react like" event.\nExample datepicker where ',Object(l.b)("inlineCode",{parentName:"p"},"<DatePicker/>")," is some random library that has weird props like onSelect and inputProps etc...:"),Object(l.b)("pre",null,Object(l.b)("code",Object(I.a)({parentName:"pre"},{className:"language-jsx"}),"export default function DatepickerInput(props) {\n    return (\n        <DatePicker\n            selectedDate={props.value}\n            inputProps={{onBlur: props.onBlur}}\n            onSelect={date =>\n                props.onChange({\n                    target: {value: date, name: props.name},\n                })\n            }\n        />\n    );\n}\n")))}M.isMDXComponent=!0;i.a.createElement;var L,V=(L="Example",function(e){return console.warn("Component "+L+" was not imported, exported, or provided by MDXProvider as global scope"),Object(l.b)("div",e)}),W={},X="wrapper";function z(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(X,Object(r.a)({},W,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)(M,{mdxType:"Readme"}),Object(l.b)("h3",null,"Example"),Object(l.b)(V,{mdxType:"Example"},Object(l.b)(c.a,{initialValues:{test:""},onSubmit:function(e,t){setTimeout((function(){t.resetForm()}),1e3)},mdxType:"Form"},Object(l.b)(s.a,{label:"Test",mdxType:"FormGroup"},Object(l.b)(u.a,{name:"test",mdxType:"TextInput"})),Object(l.b)(B,{mdxType:"SubmitButton"},"Submit"))))}z.isMDXComponent=!0},cwdW:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))},"dV/x":function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}n.d(t,"a",(function(){return r}))},gf6S:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/forms/forms",function(){return n("Yyr4")}])}},[["gf6S",0,1,2,5,3]]]);